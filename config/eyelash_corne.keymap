#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    combos {
        compatible = "zmk,combos";

        cut {
            bindings = <&kp LC(X)>;
            key-positions = <25 26>;
            layers = <0>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <26 27>;
            layers = <0>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <27 28>;
            layers = <0>;
        };

        caps_lock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <5 6>;
            layers = <0>;
        };

        reset_bluetooth {
            bindings = <&bt BT_CLR>;
            key-positions = <5 6 4 3 7 8>;
            layers = <2>;
        };
    };

    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        tpm: tap_preferred_modifier {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E     &kp R  &kp T                               &kp UP                &kp Y        &kp U  &kp I      &kp O    &kp P     &kp BACKSLASH
&mt LALT TAB       &kp A  &kp S  &kp D     &kp F  &kp G                     &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp SPACE              &kp DOWN              &kp N        &kp M  &kp FSLH  &kp COMMA  &kp DOT   &kp RSHIFT
                         &mo 1  &kp BACKSPACE  &lt 3 SPACE                                               &kp RET  &mt F20 DELETE  &mo 2
            >;

             sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;

           
        };

        lower_layer {
            display-name = "NUM-SYM";
            bindings = <
&trans  &kp N1           &kp N2          &kp N3        &kp N4        &kp N5                                         &mmv MOVE_UP                     &kp CARET       &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE
&trans  &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                   &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS       &kp EQUAL      &kp GRAVE     &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
&trans  &kp NUMBER_6     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp UNDERSCORE  &kp PLUS       &kp TILDE     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans
                                         &trans        &trans        &trans                                                                          &kp INS          &kp DEL          &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "NAV";
            bindings = <
&trans  &kp F1      &kp F2      &kp F3         &kp F4               &kp F5                            &mmv MOVE_UP                     &kp F6          &kp F7         &kp F8        &kp F9     &kp F10  &kp LG(L)
&trans  &trans      &trans      &kp LS(LC(B))  &kp LC(PERIOD)       &trans             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT_ARROW  &kp DOWN       &kp UP_ARROW  &kp RIGHT  &kp F11  &trans
&trans  &bt BT_PRV  &bt BT_NXT  &out OUT_TOG   &tans    &trans   &trans                    &mmv MOVE_DOWN                   &kp HOME        &kp PAGE_DOWN  &kp PAGE_UP   &kp END    &kp F12  &trans
                                    &trans     &trans     &trans                                                             &trans    &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};