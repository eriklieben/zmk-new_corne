#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE    &kp Q  &kp W  &kp E  &kp R          &kp T          &kp Y    &kp U           &kp I     &kp O      &kp P     &kp BACKSLASH
&mt LALT TAB  &kp A  &kp S  &kp D  &kp F          &kp G          &kp H    &kp J           &kp K     &kp L      &kp SEMI  &kp SQT
&kp LCTRL     &kp Z  &kp X  &kp C  &kp V          &kp B          &kp N    &kp M           &kp FSLH  &kp COMMA  &kp DOT   &kp RSHIFT
                            &mo 1  &kp BACKSPACE  &lt 3 SPACE    &kp RET  &mt F20 DELETE  &mo 2
            >;
        };

        symbols {
            bindings = <
&kp PERIOD  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT     &kp CARET       &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE
&trans      &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp MINUS       &kp EQUAL      &kp GRAVE     &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
&trans      &kp NUMBER_6     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0    &kp UNDERSCORE  &kp PLUS       &kp TILDE     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans
                                           &trans        &trans        &trans          &trans          &trans         &trans
            >;
        };

        nav {
            bindings = <
&trans  &kp F1      &kp F2      &kp F3         &kp F4               &kp F5    &kp F6          &kp F7         &kp F8        &kp F9     &kp F10  &kp LG(L)
&trans  &trans      &trans      &kp LS(LC(B))  &kp LC(PERIOD)       &trans    &kp LEFT_ARROW  &kp DOWN       &kp UP_ARROW  &kp RIGHT  &kp F11  &trans
&trans  &bt BT_PRV  &bt BT_NXT  &out OUT_TOG   &ext_power EP_TOG    &trans    &kp HOME        &kp PAGE_DOWN  &kp PAGE_UP   &kp END    &kp F12  &trans
                                &trans         &trans               &trans    &trans          &trans         &trans
            >;
        };

        linux {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
